<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="140" failures="0" errors="0" time="11.632899959">
    <testsuite name="src/test/msw-basic-react.example.test.tsx" timestamp="2025-09-04T18:17:28.835Z" hostname="JJJGTJ2F4W.local" tests="6" failures="0" errors="0" skipped="0" time="0.491312666">
        <testcase classname="src/test/msw-basic-react.example.test.tsx" name="Basic MSW React Integration &gt; 1. Form Submission with API Mocking &gt; should handle successful login" time="0.170846541">
        </testcase>
        <testcase classname="src/test/msw-basic-react.example.test.tsx" name="Basic MSW React Integration &gt; 1. Form Submission with API Mocking &gt; should handle failed login" time="0.104550958">
        </testcase>
        <testcase classname="src/test/msw-basic-react.example.test.tsx" name="Basic MSW React Integration &gt; 1. Form Submission with API Mocking &gt; should show loading state during submission" time="0.18375">
        </testcase>
        <testcase classname="src/test/msw-basic-react.example.test.tsx" name="Basic MSW React Integration &gt; 2. Data Fetching with useEffect &gt; should fetch and display user profile" time="0.012022791">
        </testcase>
        <testcase classname="src/test/msw-basic-react.example.test.tsx" name="Basic MSW React Integration &gt; 2. Data Fetching with useEffect &gt; should handle API errors gracefully" time="0.00792325">
        </testcase>
        <testcase classname="src/test/msw-basic-react.example.test.tsx" name="Basic MSW React Integration &gt; 3. Custom Hook with MSW &gt; should test custom hook with mocked API" time="0.009796792">
        </testcase>
    </testsuite>
    <testsuite name="src/test/pilot-enhanced-testing.test.tsx" timestamp="2025-09-04T18:17:28.836Z" hostname="JJJGTJ2F4W.local" tests="9" failures="0" errors="0" skipped="0" time="4.19090275">
        <testcase classname="src/test/pilot-enhanced-testing.test.tsx" name="Pilot Tests - Enhanced Testing Utilities &gt; Real-World Form Testing Scenarios &gt; should handle a complete user registration form" time="0.685729375">
            <system-err>
An update to RegistrationForm inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

            </system-err>
        </testcase>
        <testcase classname="src/test/pilot-enhanced-testing.test.tsx" name="Pilot Tests - Enhanced Testing Utilities &gt; Real-World Form Testing Scenarios &gt; should handle form validation errors" time="0.879212542">
        </testcase>
        <testcase classname="src/test/pilot-enhanced-testing.test.tsx" name="Pilot Tests - Enhanced Testing Utilities &gt; Complex Component Interaction Testing &gt; should handle a multi-step wizard form" time="0.843034875">
        </testcase>
        <testcase classname="src/test/pilot-enhanced-testing.test.tsx" name="Pilot Tests - Enhanced Testing Utilities &gt; Performance and Edge Case Testing &gt; should handle rapid form interactions" time="0.308826041">
        </testcase>
        <testcase classname="src/test/pilot-enhanced-testing.test.tsx" name="Pilot Tests - Enhanced Testing Utilities &gt; Performance and Edge Case Testing &gt; should handle form with many fields efficiently" time="0.125293167">
        </testcase>
        <testcase classname="src/test/pilot-enhanced-testing.test.tsx" name="Pilot Tests - Enhanced Testing Utilities &gt; Enhanced API Integration Testing &gt; should handle form submission with real API calls" time="0.423380875">
        </testcase>
        <testcase classname="src/test/pilot-enhanced-testing.test.tsx" name="Pilot Tests - Enhanced Testing Utilities &gt; Enhanced API Integration Testing &gt; should handle API errors gracefully" time="0.410377167">
        </testcase>
        <testcase classname="src/test/pilot-enhanced-testing.test.tsx" name="Pilot Tests - Enhanced Testing Utilities &gt; Enhanced API Integration Testing &gt; should handle network errors during form submission" time="0.001861334">
        </testcase>
        <testcase classname="src/test/pilot-enhanced-testing.test.tsx" name="Pilot Tests - Enhanced Testing Utilities &gt; Enhanced API Integration Testing &gt; should handle concurrent form submissions" time="0.510537916">
            <system-err>
An update to ConcurrentForm inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act
An update to ConcurrentForm inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

            </system-err>
        </testcase>
    </testsuite>
    <testsuite name="src/test/react-testing-library.examples.test.tsx" timestamp="2025-09-04T18:17:28.838Z" hostname="JJJGTJ2F4W.local" tests="27" failures="0" errors="0" skipped="0" time="2.112376833">
        <testcase classname="src/test/react-testing-library.examples.test.tsx" name="React Testing Library Examples &gt; 1. Basic Component Rendering &gt; should render button with default props" time="0.061553583">
        </testcase>
        <testcase classname="src/test/react-testing-library.examples.test.tsx" name="React Testing Library Examples &gt; 1. Basic Component Rendering &gt; should render button with custom variant" time="0.004212458">
        </testcase>
        <testcase classname="src/test/react-testing-library.examples.test.tsx" name="React Testing Library Examples &gt; 1. Basic Component Rendering &gt; should render button with different sizes" time="0.007721875">
        </testcase>
        <testcase classname="src/test/react-testing-library.examples.test.tsx" name="React Testing Library Examples &gt; 2. User Interactions &gt; should handle button click events" time="0.018967417">
        </testcase>
        <testcase classname="src/test/react-testing-library.examples.test.tsx" name="React Testing Library Examples &gt; 2. User Interactions &gt; should handle keyboard interactions" time="0.00898725">
        </testcase>
        <testcase classname="src/test/react-testing-library.examples.test.tsx" name="React Testing Library Examples &gt; 2. User Interactions &gt; should handle disabled state" time="0.008993">
        </testcase>
        <testcase classname="src/test/react-testing-library.examples.test.tsx" name="React Testing Library Examples &gt; 3. Enhanced Form Testing with New Utilities &gt; should render a comprehensive form component" time="0.015510917">
        </testcase>
        <testcase classname="src/test/react-testing-library.examples.test.tsx" name="React Testing Library Examples &gt; 3. Enhanced Form Testing with New Utilities &gt; should fill and validate text inputs using new utilities" time="0.104725958">
        </testcase>
        <testcase classname="src/test/react-testing-library.examples.test.tsx" name="React Testing Library Examples &gt; 3. Enhanced Form Testing with New Utilities &gt; should handle select dropdowns using new utilities" time="0.103927792">
        </testcase>
        <testcase classname="src/test/react-testing-library.examples.test.tsx" name="React Testing Library Examples &gt; 3. Enhanced Form Testing with New Utilities &gt; should handle textarea fields using new utilities" time="0.10305025">
        </testcase>
        <testcase classname="src/test/react-testing-library.examples.test.tsx" name="React Testing Library Examples &gt; 3. Enhanced Form Testing with New Utilities &gt; should handle radio buttons using new utilities" time="0.106365917">
        </testcase>
        <testcase classname="src/test/react-testing-library.examples.test.tsx" name="React Testing Library Examples &gt; 3. Enhanced Form Testing with New Utilities &gt; should handle checkboxes using new utilities" time="0.105800084">
        </testcase>
        <testcase classname="src/test/react-testing-library.examples.test.tsx" name="React Testing Library Examples &gt; 3. Enhanced Form Testing with New Utilities &gt; should handle form submission using new utilities" time="0.216739959">
        </testcase>
        <testcase classname="src/test/react-testing-library.examples.test.tsx" name="React Testing Library Examples &gt; 4. Testing with Mock Data &gt; should render user data" time="0.002332417">
        </testcase>
        <testcase classname="src/test/react-testing-library.examples.test.tsx" name="React Testing Library Examples &gt; 4. Testing with Mock Data &gt; should handle conditional rendering" time="0.003600167">
        </testcase>
        <testcase classname="src/test/react-testing-library.examples.test.tsx" name="React Testing Library Examples &gt; 5. Async Operations Testing &gt; should handle loading states" time="0.200576">
        </testcase>
        <testcase classname="src/test/react-testing-library.examples.test.tsx" name="React Testing Library Examples &gt; 6. Error Handling Testing &gt; should handle component errors gracefully" time="0.005932625">
        </testcase>
        <testcase classname="src/test/react-testing-library.examples.test.tsx" name="React Testing Library Examples &gt; 7. Accessibility Testing &gt; should have proper ARIA attributes" time="0.051719917">
        </testcase>
        <testcase classname="src/test/react-testing-library.examples.test.tsx" name="React Testing Library Examples &gt; 7. Accessibility Testing &gt; should support keyboard navigation" time="0.031069292">
        </testcase>
        <testcase classname="src/test/react-testing-library.examples.test.tsx" name="React Testing Library Examples &gt; 8. Custom Hooks Testing &gt; should test custom hook behavior" time="0.060791542">
        </testcase>
        <testcase classname="src/test/react-testing-library.examples.test.tsx" name="React Testing Library Examples &gt; 9. Component Integration Testing &gt; should test component interaction" time="0.052274084">
        </testcase>
        <testcase classname="src/test/react-testing-library.examples.test.tsx" name="React Testing Library Examples &gt; 10. Component State Testing &gt; should handle component state changes" time="0.048065333">
        </testcase>
        <testcase classname="src/test/react-testing-library.examples.test.tsx" name="React Testing Library Examples &gt; 11. Enhanced API Integration Testing &gt; should handle API data fetching with loading states" time="0.15253">
        </testcase>
        <testcase classname="src/test/react-testing-library.examples.test.tsx" name="React Testing Library Examples &gt; 11. Enhanced API Integration Testing &gt; should handle API errors gracefully" time="0.133524792">
        </testcase>
        <testcase classname="src/test/react-testing-library.examples.test.tsx" name="React Testing Library Examples &gt; 11. Enhanced API Integration Testing &gt; should handle form submission with API integration" time="0.3750365">
        </testcase>
        <testcase classname="src/test/react-testing-library.examples.test.tsx" name="React Testing Library Examples &gt; 11. Enhanced API Integration Testing &gt; should handle network errors during API calls" time="0.0017145">
        </testcase>
        <testcase classname="src/test/react-testing-library.examples.test.tsx" name="React Testing Library Examples &gt; 11. Enhanced API Integration Testing &gt; should handle concurrent API requests" time="0.123183958">
        </testcase>
    </testsuite>
    <testsuite name="src/test/router-testing.examples.test.tsx" timestamp="2025-09-04T18:17:28.841Z" hostname="JJJGTJ2F4W.local" tests="12" failures="0" errors="0" skipped="0" time="1.51511525">
        <testcase classname="src/test/router-testing.examples.test.tsx" name="TanStack Router Testing Examples &gt; Basic Component Rendering &gt; renders a simple component with router context" time="0.042312416">
        </testcase>
        <testcase classname="src/test/router-testing.examples.test.tsx" name="TanStack Router Testing Examples &gt; Basic Component Rendering &gt; renders component at specific route" time="0.010870542">
        </testcase>
        <testcase classname="src/test/router-testing.examples.test.tsx" name="TanStack Router Testing Examples &gt; Dynamic Routes &gt; renders component with route parameters" time="0.008602083">
        </testcase>
        <testcase classname="src/test/router-testing.examples.test.tsx" name="TanStack Router Testing Examples &gt; Authentication Context &gt; renders component with authenticated context" time="0.007020167">
        </testcase>
        <testcase classname="src/test/router-testing.examples.test.tsx" name="TanStack Router Testing Examples &gt; Authentication Context &gt; renders component with unauthenticated context" time="0.005649166">
        </testcase>
        <testcase classname="src/test/router-testing.examples.test.tsx" name="TanStack Router Testing Examples &gt; Router Utilities &gt; can navigate programmatically" time="0.012138583">
            <system-err>
An update to Transitioner inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act
An update to Transitioner inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act
An update to Transitioner inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act
An update to Transitioner inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act
An update to Transitioner inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

            </system-err>
        </testcase>
        <testcase classname="src/test/router-testing.examples.test.tsx" name="TanStack Router Testing Examples &gt; Router Utilities &gt; can get current route information" time="0.004573666">
        </testcase>
        <testcase classname="src/test/router-testing.examples.test.tsx" name="TanStack Router Testing Examples &gt; Mock Route Creation &gt; creates mock routes for isolated testing" time="0.000181041">
        </testcase>
        <testcase classname="src/test/router-testing.examples.test.tsx" name="TanStack Router Testing Examples &gt; Enhanced Component Testing with New Utilities &gt; should test component rendering with enhanced utilities" time="0.008537375">
        </testcase>
        <testcase classname="src/test/router-testing.examples.test.tsx" name="TanStack Router Testing Examples &gt; Enhanced Component Testing with New Utilities &gt; should test component interactions with enhanced utilities" time="0.419394417">
        </testcase>
        <testcase classname="src/test/router-testing.examples.test.tsx" name="TanStack Router Testing Examples &gt; Enhanced Component Testing with New Utilities &gt; should test form interactions with enhanced utilities" time="0.655804958">
        </testcase>
        <testcase classname="src/test/router-testing.examples.test.tsx" name="TanStack Router Testing Examples &gt; Enhanced Component Testing with New Utilities &gt; should test component state management with enhanced utilities" time="0.337840208">
        </testcase>
    </testsuite>
    <testsuite name="src/test/simple-form-test.test.tsx" timestamp="2025-09-04T18:17:28.842Z" hostname="JJJGTJ2F4W.local" tests="9" failures="0" errors="0" skipped="0" time="1.168108375">
        <testcase classname="src/test/simple-form-test.test.tsx" name="Enhanced Testing Utilities Validation &gt; Form Testing Utilities &gt; should fill and validate text inputs" time="0.120913875">
        </testcase>
        <testcase classname="src/test/simple-form-test.test.tsx" name="Enhanced Testing Utilities Validation &gt; Form Testing Utilities &gt; should fill and validate select fields" time="0.105519125">
        </testcase>
        <testcase classname="src/test/simple-form-test.test.tsx" name="Enhanced Testing Utilities Validation &gt; Form Testing Utilities &gt; should fill and validate textarea fields" time="0.104935584">
        </testcase>
        <testcase classname="src/test/simple-form-test.test.tsx" name="Enhanced Testing Utilities Validation &gt; Form Testing Utilities &gt; should handle radio buttons" time="0.105714083">
        </testcase>
        <testcase classname="src/test/simple-form-test.test.tsx" name="Enhanced Testing Utilities Validation &gt; Form Testing Utilities &gt; should handle checkboxes" time="0.104272709">
        </testcase>
        <testcase classname="src/test/simple-form-test.test.tsx" name="Enhanced Testing Utilities Validation &gt; Component Testing Utilities &gt; should find elements by test id" time="0.002603834">
        </testcase>
        <testcase classname="src/test/simple-form-test.test.tsx" name="Enhanced Testing Utilities Validation &gt; Component Testing Utilities &gt; should assert element text content" time="0.001726333">
        </testcase>
        <testcase classname="src/test/simple-form-test.test.tsx" name="Enhanced Testing Utilities Validation &gt; Component Testing Utilities &gt; should check element existence" time="0.001381625">
        </testcase>
        <testcase classname="src/test/simple-form-test.test.tsx" name="Enhanced Testing Utilities Validation &gt; Integration Test - Complete Form Workflow &gt; should handle a complete form workflow" time="0.618991458">
        </testcase>
    </testsuite>
    <testsuite name="src/test/standalone-test.test.tsx" timestamp="2025-09-04T18:17:28.842Z" hostname="JJJGTJ2F4W.local" tests="8" failures="0" errors="0" skipped="0" time="0.962520583">
        <testcase classname="src/test/standalone-test.test.tsx" name="Enhanced Testing Utilities - Standalone Validation &gt; Form Testing Utilities &gt; should fill and validate text inputs" time="0.120875042">
        </testcase>
        <testcase classname="src/test/standalone-test.test.tsx" name="Enhanced Testing Utilities - Standalone Validation &gt; Form Testing Utilities &gt; should fill and validate select fields" time="0.106898959">
        </testcase>
        <testcase classname="src/test/standalone-test.test.tsx" name="Enhanced Testing Utilities - Standalone Validation &gt; Form Testing Utilities &gt; should handle radio buttons" time="0.106090083">
        </testcase>
        <testcase classname="src/test/standalone-test.test.tsx" name="Enhanced Testing Utilities - Standalone Validation &gt; Form Testing Utilities &gt; should handle checkboxes" time="0.103531375">
        </testcase>
        <testcase classname="src/test/standalone-test.test.tsx" name="Enhanced Testing Utilities - Standalone Validation &gt; Component Testing Utilities &gt; should find elements by test id" time="0.002339625">
        </testcase>
        <testcase classname="src/test/standalone-test.test.tsx" name="Enhanced Testing Utilities - Standalone Validation &gt; Component Testing Utilities &gt; should assert element text content" time="0.0014175">
        </testcase>
        <testcase classname="src/test/standalone-test.test.tsx" name="Enhanced Testing Utilities - Standalone Validation &gt; Component Testing Utilities &gt; should check element existence" time="0.001193834">
        </testcase>
        <testcase classname="src/test/standalone-test.test.tsx" name="Enhanced Testing Utilities - Standalone Validation &gt; Integration Test - Complete Form Workflow &gt; should handle a complete form workflow" time="0.518258">
        </testcase>
    </testsuite>
    <testsuite name="src/lib/api/__tests__/clients.test.ts" timestamp="2025-09-04T18:17:28.843Z" hostname="JJJGTJ2F4W.local" tests="14" failures="0" errors="0" skipped="0" time="0.46916425">
        <testcase classname="src/lib/api/__tests__/clients.test.ts" name="API Clients Integration &gt; Client Configuration and Setup &gt; should apply interceptors to unified clients" time="0.234858333">
        </testcase>
        <testcase classname="src/lib/api/__tests__/clients.test.ts" name="API Clients Integration &gt; Client Configuration and Setup &gt; should export unified API clients with proper configuration" time="0.000385833">
        </testcase>
        <testcase classname="src/lib/api/__tests__/clients.test.ts" name="API Clients Integration &gt; Client Configuration and Setup &gt; should have proper environment configuration" time="0.000151125">
        </testcase>
        <testcase classname="src/lib/api/__tests__/clients.test.ts" name="API Clients Integration &gt; Real HTTP Request Testing with MSW &gt; should successfully call /health endpoint using auto-generated MSW handlers" time="0.041681">
        </testcase>
        <testcase classname="src/lib/api/__tests__/clients.test.ts" name="API Clients Integration &gt; Real HTTP Request Testing with MSW &gt; should handle 404 error for non-existent endpoint" time="0.036409958">
            <system-err>
[MSW] Warning: intercepted a request without a matching request handler:

  • GET /api/api/no-such-page

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests

[MSW] Warning: intercepted a request without a matching request handler:

  • GET /api/api/no-such-page

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests

Error: AggregateError
    at Object.dispatchError (/Users/russell.oakham/repos/personal/macro-ai/node_modules/.pnpm/jsdom@26.1.0/node_modules/jsdom/lib/jsdom/living/xhr/xhr-utils.js:62:19)
    at Request.&lt;anonymous&gt; (/Users/russell.oakham/repos/personal/macro-ai/node_modules/.pnpm/jsdom@26.1.0/node_modules/jsdom/lib/jsdom/living/xhr/XMLHttpRequest-impl.js:655:18)
    at Request.emit (node:events:520:35)
    at ClientRequest.&lt;anonymous&gt; (/Users/russell.oakham/repos/personal/macro-ai/node_modules/.pnpm/jsdom@26.1.0/node_modules/jsdom/lib/jsdom/living/helpers/http-request.js:127:14)
    at ClientRequest.emit (node:events:508:28)
    at emitErrorEvent (node:_http_client:107:11)
    at MockHttpSocket.socketErrorListener (node:_http_client:574:5)
    at MockHttpSocket.emit (node:events:520:35)
    at MockHttpSocket.emit (file:///Users/russell.oakham/repos/personal/macro-ai/node_modules/.pnpm/@mswjs+interceptors@0.39.6/node_modules/@mswjs/interceptors/src/interceptors/ClientRequest/MockHttpSocket.ts:160:12)
    at Socket.&lt;anonymous&gt; (file:///Users/russell.oakham/repos/personal/macro-ai/node_modules/.pnpm/@mswjs+interceptors@0.39.6/node_modules/@mswjs/interceptors/src/interceptors/ClientRequest/MockHttpSocket.ts:293:14) [90mundefined[39m

            </system-err>
        </testcase>
        <testcase classname="src/lib/api/__tests__/clients.test.ts" name="API Clients Integration &gt; Real HTTP Request Testing with MSW &gt; should handle server errors gracefully" time="0.004629083">
        </testcase>
        <testcase classname="src/lib/api/__tests__/clients.test.ts" name="API Clients Integration &gt; Enhanced API Testing with New Utilities &gt; should track API calls using tracking mock client" time="0.001807084">
        </testcase>
        <testcase classname="src/lib/api/__tests__/clients.test.ts" name="API Clients Integration &gt; Enhanced API Testing with New Utilities &gt; should test authentication scenarios" time="0.009896">
        </testcase>
        <testcase classname="src/lib/api/__tests__/clients.test.ts" name="API Clients Integration &gt; Enhanced API Testing with New Utilities &gt; should test error scenarios comprehensively" time="0.007484708">
        </testcase>
        <testcase classname="src/lib/api/__tests__/clients.test.ts" name="API Clients Integration &gt; Enhanced API Testing with New Utilities &gt; should test performance scenarios" time="0.020006">
        </testcase>
        <testcase classname="src/lib/api/__tests__/clients.test.ts" name="API Clients Integration &gt; Error Handling and Network Resilience &gt; should handle network errors gracefully" time="0.001423625">
        </testcase>
        <testcase classname="src/lib/api/__tests__/clients.test.ts" name="API Clients Integration &gt; Error Handling and Network Resilience &gt; should handle timeout scenarios" time="0.104701917">
        </testcase>
        <testcase classname="src/lib/api/__tests__/clients.test.ts" name="API Clients Integration &gt; Client Configuration Validation &gt; should validate client configuration options" time="0.000403667">
        </testcase>
        <testcase classname="src/lib/api/__tests__/clients.test.ts" name="API Clients Integration &gt; Client Configuration Validation &gt; should have proper interceptor setup" time="0.000179667">
        </testcase>
    </testsuite>
    <testsuite name="src/lib/api/__tests__/interceptors.test.ts" timestamp="2025-09-04T18:17:28.845Z" hostname="JJJGTJ2F4W.local" tests="10" failures="0" errors="0" skipped="0" time="0.098114709">
        <testcase classname="src/lib/api/__tests__/interceptors.test.ts" name="Token Refresh Interceptors &gt; Basic Interceptor Setup &gt; should apply interceptors to a client" time="0.001841083">
        </testcase>
        <testcase classname="src/lib/api/__tests__/interceptors.test.ts" name="Token Refresh Interceptors &gt; Basic Interceptor Setup &gt; should accept clients with axios instance" time="0.000499041">
        </testcase>
        <testcase classname="src/lib/api/__tests__/interceptors.test.ts" name="Token Refresh Interceptors &gt; Basic Interceptor Setup &gt; should have consistent interceptor behavior across all clients" time="0.00011775">
        </testcase>
        <testcase classname="src/lib/api/__tests__/interceptors.test.ts" name="Token Refresh Interceptors &gt; Basic Interceptor Setup &gt; should handle clients without axios instance gracefully" time="0.000202875">
        </testcase>
        <testcase classname="src/lib/api/__tests__/interceptors.test.ts" name="Token Refresh Interceptors &gt; Enhanced Interceptor Testing with Real HTTP Requests &gt; should handle 401 errors and trigger token refresh" time="0.073107417">
        </testcase>
        <testcase classname="src/lib/api/__tests__/interceptors.test.ts" name="Token Refresh Interceptors &gt; Enhanced Interceptor Testing with Real HTTP Requests &gt; should handle 403 errors and redirect to login" time="0.003946833">
        </testcase>
        <testcase classname="src/lib/api/__tests__/interceptors.test.ts" name="Token Refresh Interceptors &gt; Enhanced Interceptor Testing with Real HTTP Requests &gt; should handle API key configuration errors" time="0.002991291">
        </testcase>
        <testcase classname="src/lib/api/__tests__/interceptors.test.ts" name="Token Refresh Interceptors &gt; Enhanced Error Handling and Network Resilience &gt; should handle network errors gracefully" time="0.001280125">
        </testcase>
        <testcase classname="src/lib/api/__tests__/interceptors.test.ts" name="Token Refresh Interceptors &gt; Enhanced Error Handling and Network Resilience &gt; should prevent infinite refresh loops" time="0.003225292">
        </testcase>
        <testcase classname="src/lib/api/__tests__/interceptors.test.ts" name="Token Refresh Interceptors &gt; Enhanced Error Handling and Network Resilience &gt; should handle concurrent requests during token refresh" time="0.008668875">
        </testcase>
    </testsuite>
    <testsuite name="src/lib/api/__tests__/performance-reliability.test.ts" timestamp="2025-09-04T18:17:28.846Z" hostname="JJJGTJ2F4W.local" tests="12" failures="0" errors="0" skipped="0" time="0.384625792">
        <testcase classname="src/lib/api/__tests__/performance-reliability.test.ts" name="Performance and Reliability Tests &gt; Client Stability &gt; should maintain stable client instances" time="0.000772625">
        </testcase>
        <testcase classname="src/lib/api/__tests__/performance-reliability.test.ts" name="Performance and Reliability Tests &gt; Client Stability &gt; should have consistent interceptor configuration" time="0.00028025">
        </testcase>
        <testcase classname="src/lib/api/__tests__/performance-reliability.test.ts" name="Performance and Reliability Tests &gt; Client Stability &gt; should have proper base configuration" time="0.000186917">
        </testcase>
        <testcase classname="src/lib/api/__tests__/performance-reliability.test.ts" name="Performance and Reliability Tests &gt; Client Stability &gt; should support interceptor management" time="0.000098917">
        </testcase>
        <testcase classname="src/lib/api/__tests__/performance-reliability.test.ts" name="Performance and Reliability Tests &gt; Enhanced Performance Testing with Real HTTP Requests &gt; should handle concurrent requests efficiently" time="0.04322325">
        </testcase>
        <testcase classname="src/lib/api/__tests__/performance-reliability.test.ts" name="Performance and Reliability Tests &gt; Enhanced Performance Testing with Real HTTP Requests &gt; should handle high-frequency requests without memory leaks" time="0.077816834">
        </testcase>
        <testcase classname="src/lib/api/__tests__/performance-reliability.test.ts" name="Performance and Reliability Tests &gt; Enhanced Performance Testing with Real HTTP Requests &gt; should maintain performance under load" time="0.0368615">
        </testcase>
        <testcase classname="src/lib/api/__tests__/performance-reliability.test.ts" name="Performance and Reliability Tests &gt; Enhanced Reliability Testing &gt; should handle network errors gracefully" time="0.0009045">
        </testcase>
        <testcase classname="src/lib/api/__tests__/performance-reliability.test.ts" name="Performance and Reliability Tests &gt; Enhanced Reliability Testing &gt; should recover from temporary network failures" time="0.00619025">
        </testcase>
        <testcase classname="src/lib/api/__tests__/performance-reliability.test.ts" name="Performance and Reliability Tests &gt; Enhanced Reliability Testing &gt; should handle timeout scenarios reliably" time="0.20394075">
        </testcase>
        <testcase classname="src/lib/api/__tests__/performance-reliability.test.ts" name="Performance and Reliability Tests &gt; Enhanced Reliability Testing &gt; should maintain client stability across multiple operations" time="0.008306167">
        </testcase>
        <testcase classname="src/lib/api/__tests__/performance-reliability.test.ts" name="Performance and Reliability Tests &gt; Enhanced Reliability Testing &gt; should handle mixed success and failure scenarios" time="0.003800583">
        </testcase>
    </testsuite>
    <testsuite name="src/lib/api/__tests__/shared-refresh-promise.test.ts" timestamp="2025-09-04T18:17:28.847Z" hostname="JJJGTJ2F4W.local" tests="9" failures="0" errors="0" skipped="0" time="0.022724292">
        <testcase classname="src/lib/api/__tests__/shared-refresh-promise.test.ts" name="Shared Refresh Promise &gt; Module Integration &gt; should have shared refresh promise utilities available" time="0.000987625">
        </testcase>
        <testcase classname="src/lib/api/__tests__/shared-refresh-promise.test.ts" name="Shared Refresh Promise &gt; Module Integration &gt; should handle basic promise coordination" time="0.00043225">
        </testcase>
        <testcase classname="src/lib/api/__tests__/shared-refresh-promise.test.ts" name="Shared Refresh Promise &gt; Enhanced Shared Refresh Promise Testing &gt; should coordinate refresh operations correctly" time="0.000147583">
        </testcase>
        <testcase classname="src/lib/api/__tests__/shared-refresh-promise.test.ts" name="Shared Refresh Promise &gt; Enhanced Shared Refresh Promise Testing &gt; should handle refresh promise errors gracefully" time="0.000133917">
        </testcase>
        <testcase classname="src/lib/api/__tests__/shared-refresh-promise.test.ts" name="Shared Refresh Promise &gt; Enhanced Shared Refresh Promise Testing &gt; should handle concurrent waitForRefreshCompletion calls" time="0.000454542">
        </testcase>
        <testcase classname="src/lib/api/__tests__/shared-refresh-promise.test.ts" name="Shared Refresh Promise &gt; Enhanced Shared Refresh Promise Testing &gt; should handle refresh promise lifecycle correctly" time="0.000175125">
        </testcase>
        <testcase classname="src/lib/api/__tests__/shared-refresh-promise.test.ts" name="Shared Refresh Promise &gt; Enhanced Shared Refresh Promise Testing &gt; should integrate with real HTTP refresh operations" time="0.011647584">
        </testcase>
        <testcase classname="src/lib/api/__tests__/shared-refresh-promise.test.ts" name="Shared Refresh Promise &gt; Enhanced Shared Refresh Promise Testing &gt; should handle network errors during refresh operations" time="0.004323042">
        </testcase>
        <testcase classname="src/lib/api/__tests__/shared-refresh-promise.test.ts" name="Shared Refresh Promise &gt; Enhanced Shared Refresh Promise Testing &gt; should maintain promise state consistency across operations" time="0.000371708">
        </testcase>
    </testsuite>
    <testsuite name="src/lib/api/__tests__/token-refresh-integration.test.ts" timestamp="2025-09-04T18:17:28.848Z" hostname="JJJGTJ2F4W.local" tests="9" failures="0" errors="0" skipped="0" time="0.063293167">
        <testcase classname="src/lib/api/__tests__/token-refresh-integration.test.ts" name="Token Refresh Integration Tests &gt; Client Integration &gt; should have unified clients properly configured for token refresh" time="0.001320125">
        </testcase>
        <testcase classname="src/lib/api/__tests__/token-refresh-integration.test.ts" name="Token Refresh Integration Tests &gt; Client Integration &gt; should have proper credentials configuration" time="0.000146625">
        </testcase>
        <testcase classname="src/lib/api/__tests__/token-refresh-integration.test.ts" name="Token Refresh Integration Tests &gt; Client Integration &gt; should support interceptor functionality" time="0.000135333">
        </testcase>
        <testcase classname="src/lib/api/__tests__/token-refresh-integration.test.ts" name="Token Refresh Integration Tests &gt; Enhanced Token Refresh Integration Testing &gt; should handle token refresh flow with real HTTP requests" time="0.028804542">
        </testcase>
        <testcase classname="src/lib/api/__tests__/token-refresh-integration.test.ts" name="Token Refresh Integration Tests &gt; Enhanced Token Refresh Integration Testing &gt; should handle refresh token expiration gracefully" time="0.00492075">
        </testcase>
        <testcase classname="src/lib/api/__tests__/token-refresh-integration.test.ts" name="Token Refresh Integration Tests &gt; Enhanced Token Refresh Integration Testing &gt; should handle concurrent token refresh requests" time="0.013315042">
        </testcase>
        <testcase classname="src/lib/api/__tests__/token-refresh-integration.test.ts" name="Token Refresh Integration Tests &gt; Enhanced Token Refresh Integration Testing &gt; should integrate with shared refresh promise correctly" time="0.005055459">
        </testcase>
        <testcase classname="src/lib/api/__tests__/token-refresh-integration.test.ts" name="Token Refresh Integration Tests &gt; Enhanced Token Refresh Integration Testing &gt; should handle network errors during token refresh" time="0.001014125">
        </testcase>
        <testcase classname="src/lib/api/__tests__/token-refresh-integration.test.ts" name="Token Refresh Integration Tests &gt; Enhanced Token Refresh Integration Testing &gt; should maintain client stability during token refresh operations" time="0.00654925">
        </testcase>
    </testsuite>
    <testsuite name="src/lib/api/__tests__/validation.test.ts" timestamp="2025-09-04T18:17:28.848Z" hostname="JJJGTJ2F4W.local" tests="15" failures="0" errors="0" skipped="0" time="0.154641292">
        <testcase classname="src/lib/api/__tests__/validation.test.ts" name="API Client Validation &gt; Client Configuration &gt; should have unified API clients configured" time="0.000636708">
        </testcase>
        <testcase classname="src/lib/api/__tests__/validation.test.ts" name="API Client Validation &gt; Client Configuration &gt; should have axios instances on all clients" time="0.000135">
        </testcase>
        <testcase classname="src/lib/api/__tests__/validation.test.ts" name="API Client Validation &gt; Client Configuration &gt; should have interceptors configured on all clients" time="0.000183625">
        </testcase>
        <testcase classname="src/lib/api/__tests__/validation.test.ts" name="API Client Validation &gt; Client Configuration &gt; should have proper axios configuration" time="0.000128375">
        </testcase>
        <testcase classname="src/lib/api/__tests__/validation.test.ts" name="API Client Validation &gt; Type Safety &gt; should have proper TypeScript types" time="0.000194583">
        </testcase>
        <testcase classname="src/lib/api/__tests__/validation.test.ts" name="API Client Validation &gt; Interceptor Integration &gt; should have consistent interceptor behavior across clients" time="0.000183208">
        </testcase>
        <testcase classname="src/lib/api/__tests__/validation.test.ts" name="API Client Validation &gt; Interceptor Integration &gt; should maintain interceptor functionality after client creation" time="0.000112834">
        </testcase>
        <testcase classname="src/lib/api/__tests__/validation.test.ts" name="API Client Validation &gt; Ready for Production &gt; should have all components needed for token refresh" time="0.000126375">
        </testcase>
        <testcase classname="src/lib/api/__tests__/validation.test.ts" name="API Client Validation &gt; Enhanced Validation with Real HTTP Requests &gt; should validate client configuration with real API calls" time="0.02364725">
        </testcase>
        <testcase classname="src/lib/api/__tests__/validation.test.ts" name="API Client Validation &gt; Enhanced Validation with Real HTTP Requests &gt; should handle validation errors gracefully" time="0.006230625">
        </testcase>
        <testcase classname="src/lib/api/__tests__/validation.test.ts" name="API Client Validation &gt; Enhanced Validation with Real HTTP Requests &gt; should validate interceptor functionality with real requests" time="0.014441625">
        </testcase>
        <testcase classname="src/lib/api/__tests__/validation.test.ts" name="API Client Validation &gt; Enhanced Validation with Real HTTP Requests &gt; should validate client headers and configuration" time="0.002070584">
        </testcase>
        <testcase classname="src/lib/api/__tests__/validation.test.ts" name="API Client Validation &gt; Enhanced Error Handling and Network Resilience &gt; should handle network errors gracefully" time="0.001204458">
        </testcase>
        <testcase classname="src/lib/api/__tests__/validation.test.ts" name="API Client Validation &gt; Enhanced Error Handling and Network Resilience &gt; should validate client resilience with timeout scenarios" time="0.103096583">
        </testcase>
        <testcase classname="src/lib/api/__tests__/validation.test.ts" name="API Client Validation &gt; Enhanced Error Handling and Network Resilience &gt; should validate client configuration consistency" time="0.000264792">
        </testcase>
    </testsuite>
</testsuites>
