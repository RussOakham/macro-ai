version: '3.8'

services:
  express-api:
    build:
      context: ../..
      dockerfile: apps/express-api/Dockerfile
      target: builder # Use builder stage for development
    container_name: macro-ai-express-api-dev
    ports:
      - '3001:3000'
    environment:
      - NODE_ENV=development
      - APP_ENV=development
      - SERVER_PORT=3000
      - AWS_REGION=us-east-1
      - AWS_COGNITO_REGION=us-east-1
      # Add other environment variables as needed for local development
    volumes:
      # Mount source code for hot reloading (development only)
      - ../../apps/express-api/src:/app/apps/express-api/src:ro
      - ../../packages:/app/packages:ro
      # Mount node_modules to avoid overwriting container's modules
      - /app/node_modules
      - /app/apps/express-api/node_modules
      - /app/packages/*/node_modules
    working_dir: /app/apps/express-api
    command: ['pnpm', 'dev'] # Use development command for hot reloading
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD',
          'node',
          '-e',
          "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - macro-ai-network

  # Optional: Add a database service for local development
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: macro-ai-postgres-dev
  #   environment:
  #     POSTGRES_DB: macro_ai_dev
  #     POSTGRES_USER: macro_ai_user
  #     POSTGRES_PASSWORD: macro_ai_password
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - macro-ai-network

  # Optional: Add Redis for local development
  # redis:
  #   image: redis:7-alpine
  #   container_name: macro-ai-redis-dev
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - macro-ai-network

networks:
  macro-ai-network:
    driver: bridge
# volumes:
#   postgres_data:
#   redis_data:
