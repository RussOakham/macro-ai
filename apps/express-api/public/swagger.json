{
	"openapi": "3.0.0",
	"info": {
		"title": "Macro AI Express API",
		"version": "0.0.1",
		"description": "API documentation for Macro AI"
	},
	"servers": [
		{
			"url": "http://localhost:3030/api"
		}
	],
	"components": {
		"securitySchemes": {
			"cookieAuth": {
				"type": "apiKey",
				"in": "cookie",
				"name": "macro-ai-accessToken"
			},
			"apiKey": {
				"type": "apiKey",
				"in": "header",
				"name": "x-api-key"
			}
		},
		"schemas": {
			"ErrorResponse": {
				"type": "object",
				"properties": {
					"message": {
						"type": "string",
						"description": "Error message"
					},
					"details": {
						"type": "object",
						"additionalProperties": {
							"nullable": true
						},
						"description": "Error details"
					}
				},
				"required": ["message"],
				"description": "Standard error response"
			},
			"RegisterRequest": {
				"type": "object",
				"properties": {
					"email": {
						"type": "string",
						"format": "email",
						"description": "User email address"
					},
					"password": {
						"type": "string",
						"minLength": 8,
						"maxLength": 15,
						"pattern": "\\d",
						"description": "User password"
					},
					"confirmPassword": {
						"type": "string",
						"minLength": 8,
						"maxLength": 15,
						"pattern": "\\d",
						"description": "Confirm password"
					}
				},
				"required": ["email", "password", "confirmPassword"],
				"description": "User registration request"
			},
			"ConfirmRegistration": {
				"type": "object",
				"properties": {
					"username": {
						"type": "string",
						"format": "email",
						"description": "User email address"
					},
					"code": {
						"type": "number",
						"description": "Verification code sent to email"
					}
				},
				"required": ["username", "code"],
				"description": "Confirm user registration with verification code"
			},
			"ResendConfirmationCode": {
				"type": "object",
				"properties": {
					"username": {
						"type": "string",
						"format": "email",
						"description": "User email address"
					}
				},
				"required": ["username"],
				"description": "Request to resend confirmation code"
			},
			"LoginRequest": {
				"type": "object",
				"properties": {
					"email": {
						"type": "string",
						"format": "email",
						"description": "User email address"
					},
					"password": {
						"type": "string",
						"minLength": 8,
						"maxLength": 15,
						"pattern": "\\d",
						"description": "User password"
					}
				},
				"required": ["email", "password"],
				"description": "User login request"
			},
			"TokenResponse": {
				"type": "object",
				"properties": {
					"accessToken": {
						"type": "string",
						"description": "JWT access token"
					},
					"refreshToken": {
						"type": "string",
						"description": "JWT refresh token"
					},
					"expiresIn": {
						"type": "number",
						"description": "Token expiration time in seconds"
					}
				},
				"required": ["accessToken", "refreshToken", "expiresIn"],
				"description": "Authentication tokens response"
			},
			"RefreshTokenRequest": {
				"type": "object",
				"properties": {
					"refreshToken": {
						"type": "string",
						"description": "JWT refresh token"
					}
				},
				"required": ["refreshToken"],
				"description": "Request to refresh access token"
			},
			"ForgotPasswordRequest": {
				"type": "object",
				"properties": {
					"email": {
						"type": "string",
						"format": "email",
						"description": "User email address"
					}
				},
				"required": ["email"],
				"description": "Request to initiate password reset"
			},
			"ConfirmForgotPasswordRequest": {
				"type": "object",
				"properties": {
					"email": {
						"type": "string",
						"format": "email",
						"description": "User email address"
					},
					"code": {
						"type": "string",
						"minLength": 6,
						"maxLength": 6,
						"description": "Verification code sent to email"
					},
					"newPassword": {
						"type": "string",
						"minLength": 8,
						"maxLength": 15,
						"pattern": "\\d",
						"description": "New password"
					},
					"confirmPassword": {
						"type": "string",
						"minLength": 8,
						"maxLength": 15,
						"pattern": "\\d",
						"description": "Confirm new password"
					}
				},
				"required": ["email", "code", "newPassword", "confirmPassword"],
				"description": "Request to confirm password reset with code"
			},
			"GetAuthUserRequest": {
				"type": "object",
				"properties": {
					"accessToken": {
						"type": "string",
						"description": "JWT access token"
					}
				},
				"required": ["accessToken"],
				"description": "Request to get authenticated user information"
			},
			"GetAuthUserResponse": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"description": "User ID"
					},
					"email": {
						"type": "string",
						"description": "User email address"
					},
					"emailVerified": {
						"type": "boolean",
						"description": "Email verification status"
					}
				},
				"required": ["id", "email", "emailVerified"],
				"description": "Authenticated user information response"
			},
			"AuthResponse": {
				"type": "object",
				"properties": {
					"message": {
						"type": "string",
						"description": "Response message"
					},
					"user": {
						"type": "object",
						"properties": {
							"id": {
								"type": "string",
								"description": "User ID"
							},
							"email": {
								"type": "string",
								"description": "User email address"
							}
						},
						"required": ["id", "email"],
						"description": "User information"
					},
					"tokens": {
						"type": "object",
						"properties": {
							"accessToken": {
								"type": "string",
								"description": "JWT access token"
							},
							"refreshToken": {
								"type": "string",
								"description": "JWT refresh token"
							},
							"expiresIn": {
								"type": "number",
								"description": "Token expiration time in seconds"
							}
						},
						"required": ["accessToken", "refreshToken", "expiresIn"],
						"description": "Authentication tokens"
					}
				},
				"required": ["message"],
				"description": "Generic authentication response"
			},
			"UserProfile": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid"
					},
					"email": {
						"type": "string",
						"maxLength": 255
					},
					"emailVerified": {
						"type": "boolean",
						"nullable": true
					},
					"firstName": {
						"type": "string",
						"nullable": true,
						"maxLength": 255
					},
					"lastName": {
						"type": "string",
						"nullable": true,
						"maxLength": 255
					},
					"createdAt": {
						"type": "string",
						"nullable": true
					},
					"updatedAt": {
						"type": "string",
						"nullable": true
					},
					"lastLogin": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"id",
					"email",
					"emailVerified",
					"firstName",
					"lastName",
					"createdAt",
					"updatedAt",
					"lastLogin"
				]
			},
			"UpdateUserProfile": {
				"type": "object",
				"properties": {
					"firstName": {
						"type": "string",
						"description": "User first name"
					},
					"lastName": {
						"type": "string",
						"description": "User last name"
					}
				},
				"description": "Update user profile request"
			},
			"UserResponse": {
				"type": "object",
				"properties": {
					"user": {
						"type": "object",
						"properties": {
							"id": {
								"type": "string",
								"format": "uuid"
							},
							"email": {
								"type": "string",
								"maxLength": 255
							},
							"emailVerified": {
								"type": "boolean",
								"nullable": true
							},
							"firstName": {
								"type": "string",
								"nullable": true,
								"maxLength": 255
							},
							"lastName": {
								"type": "string",
								"nullable": true,
								"maxLength": 255
							},
							"createdAt": {
								"type": "string",
								"nullable": true
							},
							"updatedAt": {
								"type": "string",
								"nullable": true
							},
							"lastLogin": {
								"type": "string",
								"nullable": true
							}
						},
						"required": [
							"id",
							"email",
							"emailVerified",
							"firstName",
							"lastName",
							"createdAt",
							"updatedAt",
							"lastLogin"
						],
						"description": "User profile data"
					}
				},
				"required": ["user"],
				"description": "User profile response"
			},
			"HealthResponse": {
				"type": "object",
				"properties": {
					"message": {
						"type": "string",
						"description": "Health status message",
						"example": "Api Health Status: OK"
					}
				},
				"required": ["message"],
				"description": "API health check response"
			},
			"HealthErrorResponse": {
				"type": "object",
				"properties": {
					"message": {
						"type": "string",
						"description": "Error message",
						"example": "Api Status: Error"
					}
				},
				"required": ["message"],
				"description": "API health check error response"
			}
		},
		"parameters": {}
	},
	"paths": {
		"/auth/register": {
			"post": {
				"tags": ["Authentication"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"email": {
										"type": "string",
										"format": "email",
										"description": "User email address"
									},
									"password": {
										"type": "string",
										"minLength": 8,
										"maxLength": 15,
										"pattern": "\\d",
										"description": "User password"
									},
									"confirmPassword": {
										"type": "string",
										"minLength": 8,
										"maxLength": 15,
										"pattern": "\\d",
										"description": "Confirm password"
									}
								},
								"required": ["email", "password", "confirmPassword"]
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "User registered successfully",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Response message"
										},
										"user": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string",
													"description": "User ID"
												},
												"email": {
													"type": "string",
													"description": "User email address"
												}
											},
											"required": ["id", "email"],
											"description": "User information"
										},
										"tokens": {
											"type": "object",
											"properties": {
												"accessToken": {
													"type": "string",
													"description": "JWT access token"
												},
												"refreshToken": {
													"type": "string",
													"description": "JWT refresh token"
												},
												"expiresIn": {
													"type": "number",
													"description": "Token expiration time in seconds"
												}
											},
											"required": ["accessToken", "refreshToken", "expiresIn"],
											"description": "Authentication tokens"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"400": {
						"description": "Invalid request data",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized - Authentication required",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"403": {
						"description": "Forbidden - User already confirmed",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"409": {
						"description": "Conflict - User already confirmed",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"429": {
						"description": "Too many requests",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"500": {
						"description": "Server error",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					}
				}
			}
		},
		"/auth/login": {
			"post": {
				"tags": ["Authentication"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"email": {
										"type": "string",
										"format": "email",
										"description": "User email address"
									},
									"password": {
										"type": "string",
										"minLength": 8,
										"maxLength": 15,
										"pattern": "\\d",
										"description": "User password"
									}
								},
								"required": ["email", "password"]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "User logged in successfully",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Response message"
										},
										"user": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string",
													"description": "User ID"
												},
												"email": {
													"type": "string",
													"description": "User email address"
												}
											},
											"required": ["id", "email"],
											"description": "User information"
										},
										"tokens": {
											"type": "object",
											"properties": {
												"accessToken": {
													"type": "string",
													"description": "JWT access token"
												},
												"refreshToken": {
													"type": "string",
													"description": "JWT refresh token"
												},
												"expiresIn": {
													"type": "number",
													"description": "Token expiration time in seconds"
												}
											},
											"required": ["accessToken", "refreshToken", "expiresIn"],
											"description": "Authentication tokens"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"400": {
						"description": "Invalid credentials",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized - Authentication required",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"403": {
						"description": "Forbidden - User already confirmed",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"409": {
						"description": "Conflict - User already confirmed",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"429": {
						"description": "Too many requests",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"500": {
						"description": "Server error",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					}
				}
			}
		},
		"/auth/confirm-registration": {
			"post": {
				"tags": ["Authentication"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"username": {
										"type": "string",
										"format": "email",
										"description": "User email address"
									},
									"code": {
										"type": "number",
										"description": "Verification code sent to email"
									}
								},
								"required": ["username", "code"]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "User registration confirmed successfully",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Response message"
										},
										"user": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string",
													"description": "User ID"
												},
												"email": {
													"type": "string",
													"description": "User email address"
												}
											},
											"required": ["id", "email"],
											"description": "User information"
										},
										"tokens": {
											"type": "object",
											"properties": {
												"accessToken": {
													"type": "string",
													"description": "JWT access token"
												},
												"refreshToken": {
													"type": "string",
													"description": "JWT refresh token"
												},
												"expiresIn": {
													"type": "number",
													"description": "Token expiration time in seconds"
												}
											},
											"required": ["accessToken", "refreshToken", "expiresIn"],
											"description": "Authentication tokens"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"400": {
						"description": "Invalid confirmation code",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized - Authentication required",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"403": {
						"description": "Forbidden - User already confirmed",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"409": {
						"description": "Conflict - User already confirmed",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"429": {
						"description": "Too many requests",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"500": {
						"description": "Server error",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					}
				}
			}
		},
		"/auth/resend-confirmation-code": {
			"post": {
				"tags": ["Authentication"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"username": {
										"type": "string",
										"format": "email",
										"description": "User email address"
									}
								},
								"required": ["username"]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Confirmation code resent successfully",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Response message"
										},
										"user": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string",
													"description": "User ID"
												},
												"email": {
													"type": "string",
													"description": "User email address"
												}
											},
											"required": ["id", "email"],
											"description": "User information"
										},
										"tokens": {
											"type": "object",
											"properties": {
												"accessToken": {
													"type": "string",
													"description": "JWT access token"
												},
												"refreshToken": {
													"type": "string",
													"description": "JWT refresh token"
												},
												"expiresIn": {
													"type": "number",
													"description": "Token expiration time in seconds"
												}
											},
											"required": ["accessToken", "refreshToken", "expiresIn"],
											"description": "Authentication tokens"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"400": {
						"description": "Invalid request data",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized - Authentication required",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"403": {
						"description": "Forbidden - User already confirmed",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"409": {
						"description": "Conflict - User already confirmed",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"429": {
						"description": "Too many requests",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"500": {
						"description": "Server error",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					}
				}
			}
		},
		"/auth/forgot-password": {
			"post": {
				"tags": ["Authentication"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"email": {
										"type": "string",
										"format": "email",
										"description": "User email address"
									}
								},
								"required": ["email"]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Password reset initiated successfully",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Response message"
										},
										"user": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string",
													"description": "User ID"
												},
												"email": {
													"type": "string",
													"description": "User email address"
												}
											},
											"required": ["id", "email"],
											"description": "User information"
										},
										"tokens": {
											"type": "object",
											"properties": {
												"accessToken": {
													"type": "string",
													"description": "JWT access token"
												},
												"refreshToken": {
													"type": "string",
													"description": "JWT refresh token"
												},
												"expiresIn": {
													"type": "number",
													"description": "Token expiration time in seconds"
												}
											},
											"required": ["accessToken", "refreshToken", "expiresIn"],
											"description": "Authentication tokens"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"400": {
						"description": "Invalid request data",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized - Authentication required",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"403": {
						"description": "Forbidden - User already confirmed",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"409": {
						"description": "Conflict - User already confirmed",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"429": {
						"description": "Too many requests",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"500": {
						"description": "Server error",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					}
				}
			}
		},
		"/auth/confirm-forgot-password": {
			"post": {
				"tags": ["Authentication"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"email": {
										"type": "string",
										"format": "email",
										"description": "User email address"
									},
									"code": {
										"type": "string",
										"minLength": 6,
										"maxLength": 6,
										"description": "Verification code sent to email"
									},
									"newPassword": {
										"type": "string",
										"minLength": 8,
										"maxLength": 15,
										"pattern": "\\d",
										"description": "New password"
									},
									"confirmPassword": {
										"type": "string",
										"minLength": 8,
										"maxLength": 15,
										"pattern": "\\d",
										"description": "Confirm new password"
									}
								},
								"required": ["email", "code", "newPassword", "confirmPassword"]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Password reset successfully",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Response message"
										},
										"user": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string",
													"description": "User ID"
												},
												"email": {
													"type": "string",
													"description": "User email address"
												}
											},
											"required": ["id", "email"],
											"description": "User information"
										},
										"tokens": {
											"type": "object",
											"properties": {
												"accessToken": {
													"type": "string",
													"description": "JWT access token"
												},
												"refreshToken": {
													"type": "string",
													"description": "JWT refresh token"
												},
												"expiresIn": {
													"type": "number",
													"description": "Token expiration time in seconds"
												}
											},
											"required": ["accessToken", "refreshToken", "expiresIn"],
											"description": "Authentication tokens"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"400": {
						"description": "Invalid request data",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized - Authentication required",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"403": {
						"description": "Forbidden - User already confirmed",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"409": {
						"description": "Conflict - User already confirmed",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"429": {
						"description": "Too many requests",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"500": {
						"description": "Server error",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					}
				}
			}
		},
		"/auth/user": {
			"get": {
				"tags": ["Authentication"],
				"responses": {
					"200": {
						"description": "User information retrieved successfully",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"description": "User ID"
										},
										"email": {
											"type": "string",
											"description": "User email address"
										},
										"emailVerified": {
											"type": "boolean",
											"description": "Email verification status"
										}
									},
									"required": ["id", "email", "emailVerified"]
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized - Authentication required",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"500": {
						"description": "Server error",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					}
				}
			}
		},
		"/auth/logout": {
			"post": {
				"tags": ["Authentication"],
				"responses": {
					"200": {
						"description": "User logged out successfully",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Response message"
										},
										"user": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string",
													"description": "User ID"
												},
												"email": {
													"type": "string",
													"description": "User email address"
												}
											},
											"required": ["id", "email"],
											"description": "User information"
										},
										"tokens": {
											"type": "object",
											"properties": {
												"accessToken": {
													"type": "string",
													"description": "JWT access token"
												},
												"refreshToken": {
													"type": "string",
													"description": "JWT refresh token"
												},
												"expiresIn": {
													"type": "number",
													"description": "Token expiration time in seconds"
												}
											},
											"required": ["accessToken", "refreshToken", "expiresIn"],
											"description": "Authentication tokens"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"400": {
						"description": "Invalid request data",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized - Authentication required",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"403": {
						"description": "Forbidden - User already confirmed",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"409": {
						"description": "Conflict - User already confirmed",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"429": {
						"description": "Too many requests",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"500": {
						"description": "Server error",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					}
				}
			}
		},
		"/auth/refresh": {
			"post": {
				"tags": ["Authentication"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"refreshToken": {
										"type": "string",
										"description": "JWT refresh token"
									}
								},
								"required": ["refreshToken"]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Access token refreshed successfully",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Response message"
										},
										"user": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string",
													"description": "User ID"
												},
												"email": {
													"type": "string",
													"description": "User email address"
												}
											},
											"required": ["id", "email"],
											"description": "User information"
										},
										"tokens": {
											"type": "object",
											"properties": {
												"accessToken": {
													"type": "string",
													"description": "JWT access token"
												},
												"refreshToken": {
													"type": "string",
													"description": "JWT refresh token"
												},
												"expiresIn": {
													"type": "number",
													"description": "Token expiration time in seconds"
												}
											},
											"required": ["accessToken", "refreshToken", "expiresIn"],
											"description": "Authentication tokens"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"400": {
						"description": "Invalid request data",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized - Authentication required",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"403": {
						"description": "Forbidden - User already confirmed",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"409": {
						"description": "Conflict - User already confirmed",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"429": {
						"description": "Too many requests",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"500": {
						"description": "Server error",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					}
				}
			}
		},
		"/users/me": {
			"get": {
				"tags": ["Users"],
				"security": [
					{
						"cookieAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "User profile retrieved successfully",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"user": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string",
													"format": "uuid"
												},
												"email": {
													"type": "string",
													"maxLength": 255
												},
												"emailVerified": {
													"type": "boolean",
													"nullable": true
												},
												"firstName": {
													"type": "string",
													"nullable": true,
													"maxLength": 255
												},
												"lastName": {
													"type": "string",
													"nullable": true,
													"maxLength": 255
												},
												"createdAt": {
													"type": "string",
													"nullable": true
												},
												"updatedAt": {
													"type": "string",
													"nullable": true
												},
												"lastLogin": {
													"type": "string",
													"nullable": true
												}
											},
											"required": [
												"id",
												"email",
												"emailVerified",
												"firstName",
												"lastName",
												"createdAt",
												"updatedAt",
												"lastLogin"
											],
											"description": "User profile data"
										}
									},
									"required": ["user"]
								}
							}
						}
					},
					"400": {
						"description": "Invalid request data",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized - Authentication required",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"403": {
						"description": "Forbidden - User already confirmed",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"409": {
						"description": "Conflict - User already confirmed",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"429": {
						"description": "Too many requests",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"500": {
						"description": "Server error",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message"
										},
										"details": {
											"type": "object",
											"additionalProperties": {
												"nullable": true
											},
											"description": "Error details"
										}
									},
									"required": ["message"]
								}
							}
						}
					}
				}
			}
		},
		"/health": {
			"get": {
				"tags": ["Utility"],
				"responses": {
					"200": {
						"description": "Health check successful",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Health status message",
											"example": "Api Health Status: OK"
										}
									},
									"required": ["message"]
								}
							}
						}
					},
					"500": {
						"description": "Health check failed",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Error message",
											"example": "Api Status: Error"
										}
									},
									"required": ["message"]
								}
							}
						}
					}
				}
			}
		}
	}
}
