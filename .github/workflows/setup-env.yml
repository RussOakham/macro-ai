name: Setup Environment

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to set up (test, staging, production)'
        required: false
        type: string
        default: 'test'
    secrets:
      API_KEY:
        required: false
      SERVER_PORT:
        required: false
      AWS_COGNITO_REGION:
        required: false
      AWS_COGNITO_USER_POOL_ID:
        required: false
      AWS_COGNITO_USER_POOL_CLIENT_ID:
        required: false
      AWS_COGNITO_USER_POOL_SECRET_KEY:
        required: false
      AWS_COGNITO_ACCESS_KEY:
        required: false
      AWS_COGNITO_SECRET_KEY:
        required: false
      AWS_COGNITO_REFRESH_TOKEN_EXPIRY:
        required: false
      COOKIE_DOMAIN:
        required: false
      COOKIE_ENCRYPTION_KEY:
        required: false
      NON_RELATIONAL_DATABASE_URL:
        required: false
      RELATIONAL_DATABASE_URL:
        required: false
      REDIS_URL:
        required: false
      VITE_API_URL:
        required: false
      VITE_API_KEY:
        required: false

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create environment files
        run: |
          # Create Express API .env file
          mkdir -p apps/express-api
          cat > apps/express-api/.env << EOF
          # API Configuration
          API_KEY=${{ secrets.API_KEY || format('{0}-test-key-32chars-long-dummy', github.event.repository.name) }}
          SERVER_PORT=${{ secrets.SERVER_PORT || '3030' }}
          NODE_ENV=${{ inputs.environment }}

          # AWS Cognito Configuration
          AWS_COGNITO_REGION=${{ secrets.AWS_COGNITO_REGION || 'us-east-1' }}
          AWS_COGNITO_USER_POOL_ID=${{ secrets.AWS_COGNITO_USER_POOL_ID || 'dummy-pool-id' }}
          AWS_COGNITO_USER_POOL_CLIENT_ID=${{ secrets.AWS_COGNITO_USER_POOL_CLIENT_ID || 'dummy-client-id' }}
          AWS_COGNITO_USER_POOL_SECRET_KEY=${{ secrets.AWS_COGNITO_USER_POOL_SECRET_KEY || 'dummy-secret-key' }}
          AWS_COGNITO_ACCESS_KEY=${{ secrets.AWS_COGNITO_ACCESS_KEY || 'dummy-access-key' }}
          AWS_COGNITO_SECRET_KEY=${{ secrets.AWS_COGNITO_SECRET_KEY || 'dummy-secret-key' }}
          AWS_COGNITO_REFRESH_TOKEN_EXPIRY=${{ secrets.AWS_COGNITO_REFRESH_TOKEN_EXPIRY || '30' }}

          # Cookie Configuration
          COOKIE_DOMAIN=${{ secrets.COOKIE_DOMAIN || 'localhost' }}
          COOKIE_ENCRYPTION_KEY=${{ secrets.COOKIE_ENCRYPTION_KEY || 'dummy-encryption-key-at-least-32-chars-long' }}

          # Databases
          NON_RELATIONAL_DATABASE_URL=${{ secrets.NON_RELATIONAL_DATABASE_URL || 'dummy-url' }}
          RELATIONAL_DATABASE_URL=${{ secrets.RELATIONAL_DATABASE_URL || 'dummy-url' }}

          # Rate Limiting
          RATE_LIMIT_WINDOW_MS=900000
          RATE_LIMIT_MAX_REQUESTS=100
          AUTH_RATE_LIMIT_WINDOW_MS=3600000
          AUTH_RATE_LIMIT_MAX_REQUESTS=10
          API_RATE_LIMIT_WINDOW_MS=60000
          API_RATE_LIMIT_MAX_REQUESTS=60
          REDIS_URL=${{ secrets.REDIS_URL || 'redis://localhost:6379' }}
          EOF

          # Create Client UI .env file
          mkdir -p apps/client-ui
          cat > apps/client-ui/.env << EOF
          VITE_API_URL=${{ secrets.VITE_API_URL || 'http://localhost:3030/api' }}
          VITE_API_KEY=${{ secrets.VITE_API_KEY || 'dummy-api-key-at-least-32-chars-long' }}
          EOF

      - name: Upload Express API env file
        uses: actions/upload-artifact@v4
        with:
          name: express-api-env
          path: apps/express-api/.env
          retention-days: 1

      - name: Upload Client UI env file
        uses: actions/upload-artifact@v4
        with:
          name: client-ui-env
          path: apps/client-ui/.env
          retention-days: 1
