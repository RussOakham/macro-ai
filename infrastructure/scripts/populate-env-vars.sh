#!/bin/bash

# Environment Variable Population Script for Preview Deployments
# This script helps populate the required environment variables for the Express API

set -euo pipefail

# Color codes for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Logging functions
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check if AWS CLI is available
check_aws_cli() {
    if ! command -v aws &> /dev/null; then
        log_error "AWS CLI is not installed or not in PATH"
        exit 1
    fi
    
    # Test AWS credentials
    if ! aws sts get-caller-identity &> /dev/null; then
        log_error "AWS credentials not configured or invalid"
        exit 1
    fi
    
    log_success "AWS CLI and credentials verified"
}

# Get Parameter Store value with fallback
get_parameter_value() {
    local param_name="$1"
    local default_value="$2"
    
    if aws ssm get-parameter --name "$param_name" --query "Parameter.Value" --output text 2>/dev/null; then
        log_info "Retrieved from Parameter Store: $param_name"
    else
        log_warning "Parameter not found: $param_name, using default: $default_value"
        echo "$default_value"
    fi
}

# Main function
main() {
    log_info "Starting environment variable population for preview deployment"
    
    # Check prerequisites
    check_aws_cli
    
    # Define the environment variables and their sources
    declare -A env_vars=(
        ["API_KEY"]="/macro-ai/development/API_KEY"
        ["AWS_COGNITO_REGION"]="us-east-1"
        ["AWS_COGNITO_USER_POOL_ID"]="/macro-ai/development/AWS_COGNITO_USER_POOL_ID"
        ["AWS_COGNITO_USER_POOL_CLIENT_ID"]="/macro-ai/development/AWS_COGNITO_USER_POOL_CLIENT_ID"
        ["AWS_COGNITO_USER_POOL_SECRET_KEY"]="/macro-ai/development/AWS_COGNITO_USER_POOL_SECRET_KEY"
        ["AWS_COGNITO_ACCESS_KEY"]="/macro-ai/development/AWS_COGNITO_ACCESS_KEY"
        ["AWS_COGNITO_SECRET_KEY"]="/macro-ai/development/AWS_COGNITO_SECRET_KEY"
        ["COOKIE_ENCRYPTION_KEY"]="/macro-ai/development/COOKIE_ENCRYPTION_KEY"
        ["OPENAI_API_KEY"]="/macro-ai/development/OPENAI_API_KEY"
        ["RELATIONAL_DATABASE_URL"]="/macro-ai/development/RELATIONAL_DATABASE_URL"
        ["NON_RELATIONAL_DATABASE_URL"]="/macro-ai/development/NON_RELATIONAL_DATABASE_URL"
        ["REDIS_URL"]="/macro-ai/development/REDIS_URL"
    )
    
    # Create .env file with actual values
    log_info "Creating .env file with populated values..."
    
    cat > .env.preview << 'EOF'
# Preview Environment Configuration
# Generated by populate-env-vars.sh
# Date: $(date)

EOF
    
    # Populate each environment variable
    for var_name in "${!env_vars[@]}"; do
        param_path="${env_vars[$var_name]}"
        
        if [[ "$param_path" == us-east-1 ]]; then
            # Static value
            echo "$var_name=$param_path" >> .env.preview
            log_info "Set static value: $var_name=$param_path"
        else
            # Try to get from Parameter Store
            value=$(get_parameter_value "$param_path" "REPLACE_WITH_ACTUAL_${var_name}")
            echo "$var_name=$value" >> .env.preview
        fi
    done
    
    log_success "Environment file created: .env.preview"
    log_info "Contents of .env.preview:"
    echo "----------------------------------------"
    cat .env.preview
    echo "----------------------------------------"
    
    # Create a script to update the CDK stack
    log_info "Creating CDK update script..."
    
    cat > update-cdk-env.sh << 'EOF'
#!/bin/bash

# Script to update CDK stack with actual environment variable values
# Run this after populating .env.preview

set -euo pipefail

if [[ ! -f .env.preview ]]; then
    echo "Error: .env.preview file not found. Run populate-env-vars.sh first."
    exit 1
fi

echo "Updating CDK stack with environment variables..."

# Source the environment variables
set -a
source .env.preview
set +a

# Export variables for CDK
export API_KEY
export AWS_COGNITO_REGION
export AWS_COGNITO_USER_POOL_ID
export AWS_COGNITO_USER_POOL_CLIENT_ID
export AWS_COGNITO_USER_POOL_SECRET_KEY
export AWS_COGNITO_ACCESS_KEY
export AWS_COGNITO_SECRET_KEY
export COOKIE_ENCRYPTION_KEY
export OPENAI_API_KEY
export RELATIONAL_DATABASE_URL
export NON_RELATIONAL_DATABASE_URL
export REDIS_URL

echo "Environment variables exported for CDK deployment"
echo "You can now run: cd infrastructure && pnpm run deploy:preview"
EOF
    
    chmod +x update-cdk-env.sh
    
    log_success "CDK update script created: update-cdk-env.sh"
    log_info "Next steps:"
    log_info "1. Review .env.preview and update any placeholder values"
    log_info "2. Run: ./update-cdk-env.sh"
    log_info "3. Deploy your CDK stack"
}

# Run main function
main "$@"
