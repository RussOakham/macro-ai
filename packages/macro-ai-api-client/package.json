{
	"name": "@repo/macro-ai-api-client",
	"version": "0.0.1",
	"private": true,
	"type": "module",
	"engines": {
		"node": ">=20.0.0",
		"pnpm": ">=9.0.0"
	},
	"main": "./dist/index.js",
	"module": "./dist/index.js",
	"types": "./dist/index.d.ts",
	"scripts": {
		"build": "( [ \"$ACT_LOCAL\" = \"true\" ] && echo 'Skipping build in ACT environment' ) || (doppler run -- sh -c \"pnpm run generate && pnpm exec tsup\" || (echo 'Doppler failed, trying without Doppler...' && pnpm run generate && pnpm exec tsup))",
		"dev": "doppler run -- sh -c \"pnpm run generate && pnpm exec tsup --watch\"",
		"clean": "rm -rf dist && rm -rf src/client",
		"type-check": "( [ \"$ACT_LOCAL\" = \"true\" ] && echo 'Skipping type-check in ACT environment' ) || (doppler run -- pnpm exec tsc --noEmit || pnpm exec tsc --noEmit)",
		"generate": "doppler run -- sh -c '( [ \"$ACT_LOCAL\" = \"true\" ] && echo \"Skipping API client generation in act environment\" || [ \"$SKIP_ENV_VALIDATION\" = \"true\" ] && echo \"Skipping API client generation in Docker build\" || (cd ../../apps/express-api && pnpm generate-swagger && cd ../../packages/macro-ai-api-client && pnpm exec openapi-ts) )'",
		"format": "prettier --check --cache .",
		"format:fix": "prettier --write --cache .",
		"lint": "( [ \"$ACT_LOCAL\" = \"true\" ] && echo 'Skipping lint in ACT environment' ) || (doppler run -- sh -c \"pnpm exec oxlint . && pnpm exec eslint .\" || (pnpm exec oxlint . && pnpm exec eslint .))",
		"lint:fix": "( [ \"$ACT_LOCAL\" = \"true\" ] && echo 'Skipping lint:fix in ACT environment' ) || (doppler run -- sh -c \"pnpm exec oxlint . --fix && pnpm exec eslint . --fix\" || (pnpm exec oxlint . --fix && pnpm exec eslint . --fix))",
		"lint:ci": "( [ \"$ACT_LOCAL\" = \"true\" ] && echo 'Skipping lint:ci in ACT environment' ) || (doppler run -- sh -c \"pnpm exec oxlint . --max-warnings=0 && pnpm exec eslint . --max-warnings 0\" || (pnpm exec oxlint . --max-warnings=0 && pnpm exec eslint . --max-warnings 0))",
		"lint:oxlint": "( [ \"$ACT_LOCAL\" = \"true\" ] && echo 'Skipping lint:oxlint in ACT environment' ) || (doppler run -- pnpm exec oxlint . || pnpm exec oxlint .)",
		"lint:fix:oxlint": "( [ \"$ACT_LOCAL\" = \"true\" ] && echo 'Skipping lint:fix:oxlint in ACT environment' ) || (doppler run -- pnpm exec oxlint . --fix || pnpm exec oxlint . --fix)",
		"lint:ci:oxlint": "( [ \"$ACT_LOCAL\" = \"true\" ] && echo 'Skipping lint:ci:oxlint in ACT environment' ) || (doppler run -- pnpm exec oxlint . --max-warnings=0 || pnpm exec oxlint . --max-warnings=0)",
		"lint:eslint": "( [ \"$ACT_LOCAL\" = \"true\" ] && echo 'Skipping lint:eslint in ACT environment' ) || (doppler run -- pnpm exec eslint . || pnpm exec eslint .)",
		"lint:fix:eslint": "( [ \"$ACT_LOCAL\" = \"true\" ] && echo 'Skipping lint:fix:eslint in ACT environment' ) || (doppler run -- pnpm exec eslint . --fix || pnpm exec eslint . --fix)",
		"lint:ci:eslint": "( [ \"$ACT_LOCAL\" = \"true\" ] && echo 'Skipping lint:ci:eslint in ACT environment' ) || (doppler run -- pnpm exec eslint . --max-warnings 0 || pnpm exec eslint . --max-warnings 0)",
		"test": "( [ \"$ACT_LOCAL\" = \"true\" ] && echo 'Skipping test in ACT environment' ) || (doppler run -- pnpm exec vitest run || pnpm exec vitest run)",
		"test:watch": "( [ \"$ACT_LOCAL\" = \"true\" ] && echo 'Skipping test:watch in ACT environment' ) || (doppler run -- pnpm exec vitest || pnpm exec vitest)",
		"test:coverage": "( [ \"$ACT_LOCAL\" = \"true\" ] && echo 'Skipping test:coverage in ACT environment' ) || (doppler run -- pnpm exec vitest run --coverage || pnpm exec vitest run --coverage)"
	},
	"devDependencies": {
		"@hey-api/openapi-ts": "^0.82.3",
		"oxlint": "catalog:",
		"oxlint-tsgolint": "catalog:",
		"@repo/config-eslint": "workspace:*",
		"@repo/config-testing": "workspace:*",
		"@repo/config-typescript": "workspace:*",
		"@types/node": "catalog:",
		"@vitest/coverage-v8": "catalog:",
		"eslint": "catalog:",
		"eslint-plugin-unused-imports": "catalog:",
		"eslint-plugin-vitest": "catalog:",
		"globals": "catalog:",
		"prettier": "catalog:",
		"tsup": "^8.5.0",
		"tsx": "catalog:",
		"typescript": "catalog:",
		"vitest": "catalog:"
	},
	"dependencies": {
		"axios": "^1.11.0"
	},
	"exports": {
		".": {
			"import": "./dist/index.js"
		}
	}
}
